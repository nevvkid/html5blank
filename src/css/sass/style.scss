/**
 * styles.scss
 * ---
 * Main `sass` file. Import here `sass` files
 */


// Normalize.css > already checked for scss version
@import "../../bower_components/normalize-scss/normalize";

// Bourbon
@import "../../bower_components/bourbon/app/assets/stylesheets/bourbon";

// Neat
@import "../../bower_components/neat/app/assets/stylesheets/neat";

// pesticide layout debug helper
$pesticide-debug: true !default;
//@import "pesticide";

// Modules
@import "modules/variables";
@import "modules/mixins";
@import "modules/layout";

// Partials
@import "partials/typography";
@import "partials/forms";
@import "partials/buttons";

// My Style
html * {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

*, *:after, *:before {
  @include box-sizing(border-box);
}

body {
  font: {
    size: 100%;
    family: $primary-font; // variables inside partials > _variables.scss
  }
  color: $color-1;
  background-color: $color-4;
}

body, html {
  /* important */
  height: 100%;
}

a {
  color: $color-3;
  text-decoration: none;
}

/* --------------------------------

Modules - reusable parts of our design

-------------------------------- */

.cd-container { /* this class is used to give a max-width to the element it is applied to, and center it horizontally when it reaches that max-width */
  width: 100%;
  max-width: $L; // breakpoints inside partials > _layout.scss
  margin: 0 auto;

  &::after { /* clearfix */
    content: '';
    display: table;
    clear: both;
  }
}

/* --------------------------------

Main components

-------------------------------- */

.cd-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: $header-height-S;
  background: rgba($color-4, .95);
  box-shadow: 0 1px 2px rgba(#000, .2);
  z-index: index($main-elements, navigation); // see partials > _variables.scss
  @include clearfix;

  #cd-logo {
    float: left;
    margin: 10px 0 0 5%;

    img {
      display: block;
    }
  }

  @include MQ(M) {
    height: $header-height-M;

    #cd-logo {
      margin: 20px 0 0 5%;
    }
  }
}

.cd-main-nav {
  float: right;
  margin-right: 5%;
  width: 44px;
  height: 100%;
  background: url('img/cd-icon-menu.svg') no-repeat center center;
  background-size: 44px 44px;
  cursor: pointer;

  ul {
    position: absolute;
    margin: 0;
    top: 0;
    left: 0;
    width: 100%;
    @include transform(translateY(-100%));

    &.is-visible {
      @include transform(translateY($header-height-S));
    }
  }

  li {
    list-style-type: none;
  }

  a {
    display: block;
    height: $header-height-S;
    line-height: $header-height-S;
    padding-left: 5%;
    background: darken($color-1, 5%);
    border-top: 1px solid lighten($color-1, 3%);
    color: lighten($color-1, 30%);
  }

  @include MQ(M) {
    width: auto;
    height: auto;
    background: none;
    cursor: auto;

    ul {
      position: static;
      width: auto;
      @include transform(translateY(0));
      line-height: $header-height-M;

      &.is-visible {
        @include transform(translateY(0));
      }
    }

    li {
      display: inline-block;
      margin-left: 1em;
    }

    a {
      display: inline-block;
      height: auto;
      line-height: normal;
      background: transparent;
      padding: .6em 1em;
      border-top: none;
      color: $color-1;
      text-transform: uppercase;
      font-weight: bold;
      @include font-size(14px);

      .no-touch &:hover {
        color: $color-2;
      }
    }
  }
}

.cd-main-content {
  /* you need to assign a min-height to the main content so that the children can inherit it*/
  height: 100%;
  position: relative;
  z-index: index($main-elements, main-content); // see partials > _variables.scss
}

.cd-fixed-bg {
  position: relative;
  min-height: 100%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  z-index: index($bg-elements, fixed-bg); // see partials > _variables.scss

  .cd-intro {
    position: absolute;
    @include center;
    width: 90%;
    max-width: $L;

    h1, h2 {
    text-align: center;
    @include font-size(40px);
    text-shadow: 0 1px 3px rgba(#000, .3);
    color: $color-4;
    font-weight: 300;
    }
  }

  .cd-referral {
    position: absolute;
    @include center(x);
    bottom: $margin-vertical-large;
    width: 90%;
    max-width: $M;
    text-align: center;
    color: $color-4;
      @include MQ(M) {
        bottom: 80px;
      }

    h3 {
    @include font-size(20px);
    text-shadow: 0 1px 3px rgba(#000, .3);
    }

    .pform {
      color: $base-font-color;
      & label {display: none;}
      & input#email {
        display: inline-block;
        width: 90%;
        @include MQ(M) {
          width: 20em;
        }
      }
      & button {
        display: inline-block;
        width: 90%;
        @include MQ(M) {
          width: 10em;
        }
      }
    }
  }

  &.cd-bg-1 {
    background-image: url('img/page-landing/rendering2.jpg');
  }

  @include MQ(M) {
    h1, h2 {
      font-size: 36px;
    }
  }

  @include MQ(L) {
    background-attachment: fixed;

    h1, h2 {
      font-size: 48px;
    }
  }
}

.cd-scrolling-bg {
  position: relative;
  min-height: 100%;
  padding: 0;
  line-height: 1.6;
  z-index: index($bg-elements, scrolling-bg); // see partials > _variables.scss

  &.cd-color-1 {
    background-color: $base-background-color;
    color: $base-font-color;
  }

  .cd-footer-landing {
    position: absolute;
    @include center(x);
    bottom: 20px;
    width: 90%;
    max-width: $L;
    text-align: center;
  }

  @include MQ(M) {
    padding: 0;
    @include font-size(20px);
    line-height: 2;
    font-weight: 300;
  }
}


// grid items with lines

@mixin grid-item-columns($columns) {
  width: (100% / 12) * $columns;
}

.grid-items-lines {
  ///////////////////////////////////////////////////////////////////////////////////
  $dark-gray: #333 !default;
  $light-gray: #DDD !default;
  $medium-screen: em(640) !default;
  $large-screen: em(860) !default;
  $base-font-color: $dark-gray !default;

  p {
    line-height: 1.5em;
  }

  a {
    text-decoration: none;
  }
  //////////////////////////////////////////////////////////////////////////////////

  $grid-items-background: $base-background-color;
  $grid-item-background: $base-background-color;
  $grid-item-border: 1px solid transparentize($base-font-color, 0.8);
  $grid-item-columns: 6;
  $grid-item-color: $base-font-color;
  $grid-item-height: 14em;

  @include clearfix;
  position: relative;

  .grid-item {
    @include transition (all 0.2s ease-in-out);
    background: $grid-item-background;
    border-bottom: $grid-item-border;
    border-right: $grid-item-border;
    cursor: pointer;
    float: left;
    height: $grid-item-height;
    overflow: hidden;
    outline: none;
    padding: 2em;
    text-align: center;
    width: 100%;

    @include media($large-screen) {
      @include grid-item-columns($grid-item-columns);
    }

    &:focus,
    &:hover {
      background: transparentize($grid-item-color, 0.95);
    }
  }

  .grid-item img {
      display: block;
      height: 2.5em;
      margin-bottom: 1.2em;
      margin: auto;
      opacity: 0.2;
    }

  .grid-item h1 {
      color: $grid-item-color;
      font-size: 1.3em;
      margin-bottom: 0.4em;
    }

  .grid-item p {
      margin: auto;
      color: transparentize($grid-item-color, 0.4);

      @include media($medium-screen) {
        max-width: 70%;
      }
    }

  // this, below, might not be the most beautiful solution but it removes the outer borders by using the background color.
  .bottom-cover {
    background: $grid-items-background;
    bottom: 0px;
    height: 3px;
    position: absolute;
    width: 100%;
  }

  .right-cover {
    background: $grid-items-background;
    height: 100%;
    position: absolute;
    right: 0px;
    width: 4px;
  }
}


// referral tool message

$notice-color: #e5edf8 !default;

@mixin flash($color) {
  background-color: $color;
  color: darken($color, 60%);
  display: block;
  font-weight: 600;
  margin-bottom: $base-spacing / 2;
  padding: $base-spacing / 2;
  text-align: center;

  a {
    color: darken($color, 70%);
    text-decoration: underline;

    &:focus,
    &:hover {
      color: darken($color, 90%);
    }
  }
}

.response {
  @include flash($notice-color);
}














